-- CONNECTION: name=localhost


-- - ------------------------------- jdbc 

USE scott;

ALTER TABLE board２ DROP FOREIGN KEY board２_ibfk_1;
ALTER TABLE reply DROP FOREIGN KEY FK_Reply_ORIID;
ALTER TABLE reply DROP FOREIGN KEY FK_Reply_WRITER;
DROP TABLE IF EXISTS CATEGORY, board , MEMBER ;
CREATE TABLE member(
	no BIGINT AUTO_INCREMENT PRIMARY KEY, 
	id varchar(10),
	pw varchar(10),
	name varchar(10),
	tel varchar(10),
	create_date  TIMESTAMP DEFAULT CURRENT_TIMESTAMP 


);


INSERT INTO MEMBER
VALUES(NULL,'m01', '1', '리사', '010',NOW());
INSERT INTO MEMBER
VALUES(NULL,'2', '2', '주혁', '010',NOW());
INSERT INTO MEMBER
VALUES(NULL,'3', '3', '3', '010',NOW());
INSERT INTO MEMBER
VALUES(NULL,'4', '4', '4', '010',NOW());
INSERT INTO MEMBER
VALUES(NULL,'5', '5', '5', '010',NOW());
COMMIT;

SELECT * FROM MEMBER;


CREATE TABLE Category (
  C_CODE INT PRIMARY KEY,
  C_NAME ENUM('공통', '운동', '과학', '예술', '요리', '기타') NOT NULL
);



INSERT INTO CATEGORY (C_CODE, C_NAME) VALUES(10, '공통');
INSERT INTO CATEGORY (C_CODE, C_NAME) VALUES(20, '운동');
INSERT INTO CATEGORY (C_CODE, C_NAME) VALUES(30, '요리');
INSERT INTO CATEGORY (C_CODE, C_NAME) VALUES(70, '기타');

COMMIT;
SELECT * FROM CATEGORY;



CREATE TABLE BOARD (
  	no BIGINT AUTO_INCREMENT PRIMARY KEY, 
  CATEGORY_CODE INT,
  TITLE VARCHAR(100),
  CONTENT TEXT NOT NULL,
  WRITER BIGINT NOT NULL,
  COUNT INT DEFAULT 0 NOT NULL,
  CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  STATUS CHAR(1) DEFAULT 'Y',
  FOREIGN KEY (CATEGORY_CODE) REFERENCES CATEGORY(C_CODE),
  FOREIGN KEY (WRITER) REFERENCES MEMBER(NO)
);



INSERT INTO BOARD 
( CATEGORY_CODE, TITLE, CONTENT, WRITER) 
VALUES( 10, '게시글 1 ', '게시글1 CONTENT 입니다 ', 1);

INSERT INTO BOARD 
( CATEGORY_CODE, TITLE, CONTENT, WRITER) 
VALUES( 10, '게시글 2 ', '게시글2 CONTENT 입니다 ', 3);
INSERT INTO BOARD 
( CATEGORY_CODE, TITLE, CONTENT, WRITER) 
VALUES( 10, '게시글 3 ', '게시글3 CONTENT 입니다 ', 1);
INSERT INTO BOARD 
( CATEGORY_CODE, TITLE, CONTENT, WRITER) 
VALUES( 10, '게시글 4 ', '게시글4 CONTENT 입니다 ', 1);
INSERT INTO BOARD 
( CATEGORY_CODE, TITLE, CONTENT, WRITER) 
VALUES( 10, '게시글 5 ', '게시글5 CONTENT 입니다 ', 3);

commit ;

SELECT * FROM BOARD;

-- ---------------------------------------------------------
-- jdbc student 테이블 생성

DROP TABLE IF EXISTS STUDENT , student_del;

-- 새로운 테이블 생성
CREATE TABLE STUDENT (
    USERNO BIGINT AUTO_INCREMENT PRIMARY KEY,  
    USERID VARCHAR(15) UNIQUE,              
    PASSWORD VARCHAR(15) NOT NULL,
    USERNAME VARCHAR(20) NOT NULL,
    GENDER CHAR(1) CHECK (GENDER IN ('M', 'F')),
    AGE INT,
    EMAIL VARCHAR(30),
    PHONE CHAR(11) NOT NULL,
    ADDRESS VARCHAR(100),
    HOBBY VARCHAR(50),
    ENROLLDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO STUDENT 
VALUES (NULL, 'user11', 'user11', '유재석', 'M', 1, '1111@naver.com', '12312341111', '서울시영등포구 당산로', '독서', CURRENT_TIMESTAMP);

INSERT INTO STUDENT 
VALUES (NULL, 'user22', 'user22', '이효리', 'F', 18, '123@nate.com', '0105464845', '서울시 강남', '독서', CURRENT_TIMESTAMP);

INSERT INTO STUDENT 
VALUES (NULL, 'admin', 'admin', '관리자', 'F', 45, 'admin@naver.com', '01012345678', '경기도 수원시 팔달구', '독서', CURRENT_TIMESTAMP);

-- trigger
-- 회원 삭제 테이블 student_del 생성
CREATE TABLE student_del AS
SELECT *, CURRENT_TIMESTAMP AS del_date
FROM STUDENT
WHERE 1=0;

-- student_del 테이블 구조 확인
DESC student_del;

-- 삭제 트리거 trg_delete_student 생성
DELIMITER $$

CREATE TRIGGER trg_delete_student
    BEFORE DELETE ON STUDENT
    FOR EACH ROW
BEGIN
    INSERT INTO student_del 
    VALUES (OLD.USERNO, OLD.USERID, OLD.PASSWORD, OLD.USERNAME, OLD.GENDER, OLD.AGE, OLD.EMAIL, OLD.PHONE, OLD.ADDRESS, OLD.HOBBY, OLD.ENROLLDATE, CURRENT_TIMESTAMP);
END $$

DELIMITER ;


SELECT *
FROM STUDENT_del;